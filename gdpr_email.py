import hashlib
import nltk
from nltk.corpus import words
import tkinter as tk
from tkinter import messagebox
import re

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–æ–≤–∞—Ä—è NLTK (–µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω)
nltk.download('words')

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞
word_list = [word for word in words.words() if word.isalpha() and word.islower()]

def email_to_gdpr_english_only(email: str) -> str:
    # –ü—Ä–∏–≤–æ–¥–∏–º email –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    email = email.lower()
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º email –≤ —Ö–µ—à —Å –ø–æ–º–æ—â—å—é SHA-256
    email_hash = hashlib.sha256(email.encode('utf-8')).hexdigest()
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —á–∞—Å—Ç–∏ —Ö–µ—à–∞, —á—Ç–æ–±—ã –≤—ã–±–∏—Ä–∞—Ç—å –¥–≤–∞ —Å–ª–æ–≤–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
    word1_index = int(email_hash[:8], 16) % len(word_list)
    word2_index = int(email_hash[8:16], 16) % len(word_list)
    
    # –°–æ–±–∏—Ä–∞–µ–º —á–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–∑ –¥–≤—É—Ö —Å–ª–æ–≤
    human_readable_id = word_list[word1_index].capitalize() + word_list[word2_index].capitalize()
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º email –≤ —Ñ–æ—Ä–º–∞—Ç–µ GDPR
    return f"{human_readable_id}.gdpr@paragon-software.com"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ email —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
def is_valid_email(email: str) -> bool:
    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ email
    regex = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    return bool(re.match(regex, email)) and len(email) <= 254

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
def convert_email():
    email = entry.get()  # –ü–æ–ª—É—á–∞–µ–º email –∏–∑ –ø–æ–ª—è –≤–≤–æ–¥–∞
    if email:
        if is_valid_email(email):
            result = email_to_gdpr_english_only(email)
            result_entry.delete(0, tk.END)  # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤—ã–≤–æ–¥–∞
            result_entry.insert(0, result)  # –í—Å—Ç–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        else:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç.")
    else:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ email!")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
def copy_to_clipboard():
    result = result_entry.get()
    if result:
        root.clipboard_clear()
        root.clipboard_append(result)
        messagebox.showinfo("–£—Å–ø–µ—Ö", "Email —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!")

# –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
root = tk.Tk()
root.title("GDPR Email Converter")

# –ü–æ–ª–µ –≤–≤–æ–¥–∞ email
entry_label = tk.Label(root, text="–í–≤–µ–¥–∏—Ç–µ email:")
entry_label.pack(pady=10)

entry = tk.Entry(root, width=50)
entry.pack(pady=10)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
convert_button = tk.Button(root, text="–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å", command=convert_email)
convert_button.pack(pady=10)

# –ü–æ–ª–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
result_entry = tk.Entry(root, width=50)
result_entry.pack(pady=10)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ —Å —Å–∏–º–≤–æ–ª–æ–º —é–Ω–∏–∫–æ–¥–∞
copy_button = tk.Button(root, text="üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å", command=copy_to_clipboard)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–º–≤–æ–ª —é–Ω–∏–∫–æ–¥–∞
copy_button.pack(pady=10)

# –ó–∞–ø—É—Å–∫ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
root.mainloop()
